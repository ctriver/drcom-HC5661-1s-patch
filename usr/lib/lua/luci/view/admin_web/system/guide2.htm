<%
local ver  = require "luci.version"
local s = require "luci.tools.status"
local util  = require "luci.util"
local deviceReq = "radio0.network1"
local http = require "luci.http"
local protocol = require "luci.http.protocol"
local tw = require "tw"
local util = require "luci.util"
local n = require "luci.controller.api.network"

	local sub_action = luci.http.formvalue("sub_action")
	local codeResp_set
	local msgResp_set
	
	local codeResp = 0
	local msgResp = "" 
	
	local resultResp,ipv4Resp,ipv6Resp,statusResp,gate_wayResp,dns_ipResp,macResp,uptimeResp,mtuResp,wan_mac
	local typeResp,mobile_typeResp,mobile_dev_usbResp,pppoe_nameResp,pppoe_passwdResp,static_ipResp,static_gwResp,static_dnsResp,static_dns2Resp,static_maskResp,macaddrResp,peerdnsResp,override_dnsResp,override_dns2Resp
	
	if sub_action == "1" then
	
		--------------
		-- 网络设置 (network get_wan_info)
		--------------

		-- 参数
	
		local typeReq = luci.http.formvalue("type")
		local pppoe_nameReq = luci.http.formvalue("pppoe_name")
		local pppoe_passwdReq = luci.http.formvalue("pppoe_passwd")
		local static_ipReq = luci.http.formvalue("static_ip")
		local static_maskReq = luci.http.formvalue("static_mask")
		local static_gwReq = luci.http.formvalue("static_gw")
		local static_dnsReq = luci.http.formvalue("static_dns")
		local static_dns2Req = luci.http.formvalue("static_dns2")
		local special_dialReq = luci.http.formvalue("special_dial")
		
		typeResp = typeReq
		pppoe_nameResp = pppoe_nameReq
		pppoe_passwdResp = pppoe_passwdReq
		static_ipResp = static_ipReq
		static_gwResp = static_gwReq
		static_dnsResp = static_dnsReq
		static_dns2Resp = static_dns2Req
		static_maskResp = static_maskReq
						
		-- 插入运算代码
		
		local tnetwork = require "luci.model.tnetwork".init()
		local tnetwork_defaults = tnetwork:get_defaults()
		local uci = require "luci.model.uci"
		_uci_real  = uci.cursor()
	
		if typeReq == "pppoe" then		-- adsl 账号
		
			if pppoe_nameReq ~= "" and pppoe_nameReq ~= nil and pppoe_passwdReq ~= nil  and pppoe_passwdReq ~= nil then 
				tnetwork_defaults:set("pppoe_name",pppoe_nameReq)
				tnetwork_defaults:set("pppoe_passwd",pppoe_passwdReq)
				tnetwork_defaults:set("ifname",s.global_wan_ifname())
				
				--特殊拨号
				codeResp_set = n.proc_pppoe(pppoe_nameReq,pppoe_passwdReq,override_dnsReq,override_dns2Req,peerdnsReq)

				if special_dialReq == "1" then
					_uci_real:set("network", "wan", "special_dial", "1")
				else
					_uci_real:delete("network", "wan", "special_dial")
				end
				_uci_real:save("network")
				_uci_real:load("network")
				_uci_real:commit("network")
				_uci_real:load("network")
				
			else 
				codeResp_set = 518
			end
			
		elseif typeReq == "dhcp" then		-- dhcp 上链
		
			tnetwork_defaults:set("ip_type",typeReq)
			tnetwork_defaults:set("peerdns",peerdnsReq)
			tnetwork_defaults:set("override_dns",override_dnsReq)
			tnetwork_defaults:set("override_dns2",override_dns2Req)
	
			codeResp_set = n.proc_ip(typeReq,nil,nil,nil,override_dnsReq,override_dns2Req,peerdnsReq)
			
			_uci_real:delete("network", "wan", "special_dial")
			_uci_real:save("network")
			_uci_real:load("network")
			_uci_real:commit("network")
			_uci_real:load("network")
			
		elseif typeReq == "static" then		-- 静态 ip 账号
		
			local datatypes = require "luci.cbi.datatypes"	
			local interface = "lan"
			
			--判断是否在一个 ip 段
			local bit = require "bit"
			_,lanipv4 = luci.util.get_lan_wan_info(interface)
			local iptool = luci.ip
								
			local wanipnl = iptool.iptonl(static_ipReq)
			local wanmasknl = iptool.iptonl(static_maskReq)
			
			if not datatypes.ipaddr(static_ipReq) then
				codeResp_set = 512
			elseif not datatypes.ipaddr(static_gwReq) then 
				codeResp_set = 520	
			elseif not datatypes.ipaddr(static_dnsReq) then 
				codeResp_set = 519
			elseif not datatypes.ipaddr(static_maskReq) then 
				codeResp_set = 513
			elseif not (bit.band(iptool.iptonl(static_ipReq),iptool.iptonl(static_maskReq)) ~= bit.band(iptool.iptonl(lanipv4[1]['ip']),iptool.iptonl(static_maskReq)) and bit.band(iptool.iptonl(static_ipReq),iptool.iptonl(lanipv4[1]['mask'])) ~= bit.band(iptool.iptonl(lanipv4[1]['ip']),iptool.iptonl(lanipv4[1]['mask']))) then 
				-- (WANIP & WANMASK != LANIP & WANMASK) && (WANIP & LANMASK != LANIP & LANMASK)
				codeResp_set = 533
			elseif not ((wanipnl >= iptool.iptonl("1.0.0.0") and wanipnl <= iptool.iptonl("126.255.255.255")) or (wanipnl >= iptool.iptonl("128.0.0.0") and wanipnl <= iptool.iptonl("223.255.255.255"))) then 
				codeResp_set = 534
			elseif not (bit.band(wanipnl,iptool.ipnot(static_maskReq)) ~= 0 and bit.band(wanipnl,iptool.ipnot(static_maskReq)) ~= iptool.ipnot(static_maskReq)) then 
				-- ip & (~mask)不能为0，且ip & (~mask)不能为(~mask)
				codeResp_set = 535
			else 
				tnetwork_defaults:set("ip_type",typeReq)
				tnetwork_defaults:set("static_ip",static_ipReq)
				tnetwork_defaults:set("static_gw",static_gwReq)
				tnetwork_defaults:set("static_dns",static_dnsReq)
				tnetwork_defaults:set("static_dns2",static_dns2Req)
				tnetwork_defaults:set("static_mask",static_maskReq)				
				codeResp_set = n.proc_ip(typeReq,static_ipReq,static_maskReq,static_gwReq,static_dnsReq,static_dns2Req)
			end
			
			_uci_real:delete("network", "wan", "special_dial")
			_uci_real:save("network")
			_uci_real:load("network")
			_uci_real:commit("network")
			_uci_real:load("network")
		else 
			codeResp_set = 514
		end 
	
		-- 返回值及错误处理
		if (codeResp_set == 0) then 
			tnetwork_defaults:set("selected",typeReq)
			tnetwork:commit("tnetwork")
			tnetwork:save("tnetwork")
			
			-- 删除桥接
			local net = require "hiwifi.net"
			net.del_wifi_bridge()
					
		else 
			msgResp_set = luci.util.get_api_error(codeResp_set)
		end
		
		os.execute("ifup wan")
		
		if typeReq == "static" then
			-- TODO: 执行一次 cat /tmp/resolv.conf.auto  为空， 无 DNS
			os.execute("ifup wan")
		end
		
		os.execute("killall wisp_chk.sh 1>/dev/null 2>1")
		
	else 
	
		--------------
		-- 网络设置  network set_wan_connect
		--------------
			-- 自动类型
			autowantypeResp = luci.util.get_auto_wan_type_code()
		
			-- 现状态
			local interface = "wan"
			resultResp,ipv4Resp,ipv6Resp,statusResp,gate_wayResp,dns_ipResp,macResp,uptimeResp,mtuResp,wan_mac = util.get_lan_wan_info(interface)
			if resultResp ~= false then
				typeResp,mobile_typeResp,mobile_dev_usbResp,pppoe_nameResp,pppoe_passwdResp,static_ipResp,static_gwResp,static_dnsResp,static_dns2Resp,static_maskResp,macaddrResp,peerdnsResp,override_dnsResp,override_dns2Resp = util.get_wan_contact_info()
			else 
				codeResp = 511
			end
	end

--------------	
-- 可选项
--------------
local option_type= {
	{k="pppoe",v="宽带拨号"},
	{k="dhcp",v="自动方式 (DHCP)"},
	{k="static",v="手动方式 (静态IP)"}
}

-- step 3
if codeResp_set == 0 then
luci.http.redirect(luci.dispatcher.build_url("admin_web", "system","guide3"))
end
%>
<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>极路由－设置向导 第二步</title>
<link rel="shortcut icon" href="/favicon.ico">
<script type="text/javascript" src="<%=resource%>/web/js/jquery-1.8.1.min.js?v=<%=ver.svnRevNum%>"></script>
<link rel="stylesheet" href="<%=resource%>/web/css/guide/style.css?v=<%=ver.svnRevNum%>" type="text/css">
<script type="text/javascript" src="<%=resource%>/validators.min.js?v=<%=ver.svnRevNum%>"></script>
</head>
<body>
<div id="wrap">
	<div id="header">
	    <h1>设置向导 </h1>
	    <div id="step-bar">
	        <ol>
    	        <li id="st" class="step-button finished"><span class="no">①</span><span class="text">无线设置</span><span class="checked"></span></li>
    	        <li id="nd" class="step-button current"><span class="no">②</span><span class="text">外网设置</span><span class="checked"></span></li>
    	        <li id="rd" class="step-button"><span class="no">③</span><span class="text">云插件管理</span><span class="checked"></span></li>
	        </ol>
		</div>
	</div>
	<div id="main">
        <div class="slide" id="step2">
            <h2><span class="ps">请选择您的上网接入方式</span>外网设置</h2>
            <form class="form-horizontal" action="<%=luci.dispatcher.build_url("admin_web", "system","guide2")%>" method="post" onsubmit="return check_form(this);">
                <div class="control-group">
                   <label class="control-label">上网接入方式 </label>
                   <div class="controls">
                        <select name="type">
                        	<%
                        	for i,v in ipairs(option_type) do
                        	%>
                        		<option value="<%=v['k']%>" <%if v['k']==typeResp then%>selected="selected"<%end%>><%=v['v']%></option>
                        	<%
                        	end 
                        	%>
                        </select>
                   </div>
                 </div>     
<!-- 手动方式 -->
                 <div class="control-group static_box" style="display:none;"> <!-- error -->
                   <label class="control-label">IP 地址</label>
                   <div class="controls static_box">
                        <input type="text" name="static_ip" id="" value="<%=static_ipResp%>" placeholder="0.0.0.0" class="txt">
                       <!-- <span class="help-inline">这里是错误提示</span> -->
                   </div>
                 </div>
                 <div class="control-group static_box" style="display:none;">
                   <label class="control-label">子网掩码</label>
                   <div class="controls">
                       <input type="text" name="static_mask" id="" value="<%=static_maskResp%>" placeholder="0.0.0.0" class="txt">
                   </div>
                 </div>
                 <div class="control-group static_box" style="display:none;">
                   <label class="control-label">网关</label>
                   <div class="controls">
                       <input type="text" name="static_gw" id="" value="<%=static_gwResp%>" placeholder="0.0.0.0" class="txt">
                   </div>
                 </div>
                 <div class="control-group static_box" style="display:none;">
                   <label class="control-label">首选DNS地址</label>
                   <div class="controls">
                       <input type="text" name="static_dns" id="" value="<%=static_dnsResp%>" placeholder="0.0.0.0" class="txt">
                   </div>
                 </div>
                 <div class="control-group static_box" style="display:none;">
                   <label class="control-label">备用DNS地址</label>
                   <div class="controls">
                       <input type="text" name="static_dns2" id="" value="<%=static_dns2Resp%>" placeholder="0.0.0.0" class="txt">
                   </div>
                 </div>
<!-- /手动方式 -->  
                 <div class="control-group pppoe_box" style="display:none;">
                   <label class="control-label">帐号</label>
                   <div class="controls">
                       <input type="text" name="pppoe_name" id="" value="<%=pppoe_nameResp%>" autocomplete="off" class="txt" />
                   </div>
                 </div>
                 <div class="control-group pppoe_box" style="display:none;">
                   <label class="control-label">密码</label>
                   <div class="controls">
                       <input type="password" name="pppoe_passwd" value="<%=pppoe_passwdResp%>" id="input_password1" class="txt" autocomplete="off"> 
                       <input type="text" id="input_password2" value="<%=pppoe_passwdResp%>" class="txt" name="key_show" style="display:none;" />
                       <input type="hidden" id="sub_action" value="1" class="txt" name="sub_action" />
                       <label class="checkbox inline" for="pwdshow"><input type="checkbox" id="pwdshow" value="true" autocomplete="off"> 显示</label>
                   </div>
                 </div>
                 <script type="text/javascript">//<![CDATA[
					    $(function(){
					    	$("#pwdshow").click(function(){
					    		if($(this).attr('checked')){
					    			$("#input_password2").val($("#input_password1").val());
					    			$("#input_password1").hide();
					    			$("#input_password2").show();				
					    		}else{
					    			$("#input_password1").val($("#input_password2").val());
					    			$("#input_password1").show();
					    			$("#input_password2").hide();
					    		}
					    	});
					    	$("#input_password2").blur(function(){
					    		$("#input_password1").val($("#input_password2").val());
					    	});
					    });
					//]]></script>
                 <div class="control-group">
                    <label class="control-label"></label>
                   <div class="controls">
                        <div class="btn-toolbar">
                            <input type="submit" value="保存 - 并设置下一项 " id="submit_btn" class="btn">
                        </div>
                   </div>
                 </div>
                 <div id="error_msg" style='color:red'></div>
                <%
				local ssid_req = protocol.urldecode(luci.http.formvalue("ssid"))
				if ssid_req then
				luci.http.write("<div style='color:red'>(无线设置成功, 无线网重启 , 请重新连接  "..ssid_req..")</div>");
				end
				%>
            </form>
        </div>
    </div>
    <div id="footer">
        <p class="info"><span>系统版本：<% http.write(util.get_sys_board()) %> - <% http.write(tw.get_version():match("^([^%s]+)")) %></span><span>MAC： <%http.write(tw.get_mac())%></span><span>服务热线：40060-24680</span></p>
        <p class="copyright">&copy 2014 极路由 版权所有</p>
    </div>
</div>
<script type="text/javascript">
set_type("<%=typeResp%>");
function set_type(type){
	if (type == "pppoe") {
		$(".pppoe_box").show();
		$(".static_box").hide();
	} else if (type == "dhcp") {
		$(".pppoe_box").hide();
		$(".static_box").hide();
	} else if (type == "static") {
		$(".pppoe_box").hide();
		$(".static_box").show();
	}
}
$(function(){
	$("select[name='type']").change(function(){
		var type_now = $(this).find("option:selected").val();
		set_type(type_now);
	})
	<%
	if ssid_req then%>
	$.getJSON("<%=luci.dispatcher.build_url("api", "wifi","restart")%>",{},function(rsp) { })
	<%
	--luci.sys.call("sleep 3 && env -i /sbin/wifi >/tmp/2")
	end
	%>
})

	function check_form(obj){
		$("#error_msg").html("");
		var network_type = $("select[name='type']").find("option:selected").val();
		if( network_type=="pppoe" ){
			//pppoe
			if(obj.pppoe_name.value==""){
				$("#error_msg").show();
				$("#error_msg").html("请输入帐号");
				obj.pppoe_name.focus();
				return false;
			}
			if(obj.pppoe_passwd.value==""){
				$("#error_msg").show();
				$("#error_msg").html("请输入密码");
				obj.pppoe_passwd.focus();
				return false;
			}
			return true;
		}
		
		if( network_type=="sta" ){
			//sta
			if(obj.ssid.value==""){
				$("#error_msg").show();
				$("#error_msg").html("请选择一个可用的 无线网络");
				return false;
			}
			
			return true;
		}
					
		if(network_type=="static"){
			//ip -> static
			if(obj.static_ip.value==""){
				$("#error_msg").show();
				$("#error_msg").html("请输入 IP 地址");
				obj.static_ip.focus();
				return false;
			}
			if(!validators.ipaddr(obj.static_ip.value)){
				$("#error_msg").show();
				$("#error_msg").html("IP 地址 格式不正确");
				obj.static_ip.focus();
				return false;
			}
			if(obj.static_mask.value==""){
				$("#error_msg").show();
				$("#error_msg").html("请输入子网掩码");
				obj.static_mask.focus();
				return false;
			}
			if(!validators.ipaddr(obj.static_mask.value)){
				$("#error_msg").show();
				$("#error_msg").html("子网掩码格式不正确");
				obj.static_mask.focus();
				return false;
			}
			if(obj.static_gw.value==""){
				$("#error_msg").show();
				$("#error_msg").html("<%:请输入%><%:网关%>");
				obj.static_gw.focus();
				return false;
			}
			if(!validators.ipaddr(obj.static_gw.value)){
				$("#error_msg").show();
				$("#error_msg").html("<%:网关%><%:格式不正确%>");
				obj.static_gw.focus();
				return false;
			}
			if(obj.static_dns.value==""){
				$("#error_msg").show();
				$("#error_msg").html("<%:请输入%>DNS");
				obj.static_dns.focus();
				return false;
			}
			if(!validators.ipaddr(obj.static_dns.value)){
				$("#error_msg").show();
				$("#error_msg").html("DNS <%:格式不正确%>");
				obj.static_dns.focus();
				return false;
			}
			if(obj.static_dns2.value !="" && !validators.ipaddr(obj.static_dns2.value)){
				$("#error_msg").show();
				$("#error_msg").html("DNS <%:格式不正确%>");
				obj.static_dns2.focus();
				return false;
			}
		}
			
		return true;
	}

<% if codeResp_set and codeResp_set ~=0 then%>
	alert("<%=msgResp_set%>");
<%end%>
</script>
</body>
</html>
